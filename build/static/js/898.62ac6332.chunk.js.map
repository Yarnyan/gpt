{"version":3,"file":"static/js/898.62ac6332.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/get-will-change-name.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/WillChangeMotionValue.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/render/dom/viewport/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/resolve-element.mjs","../node_modules/framer-motion/dist/es/utils/use-in-view.mjs"],"sourcesContent":["import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\nfunction isNullish(v) {\n    return v == null;\n}\n\nexport { colorRegex, floatRegex, isNullish, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, isNullish, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return options.type === \"spring\" || !isWaapiSupportedEasing(options.ease);\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff, \n/**\n * Currently used to remove values from will-change when an animation ends.\n * Preferably this would be handled by event listeners on the MotionValue\n * but these aren't consistent enough yet when considering the different ways\n * an animation can be cancelled.\n */\nonEnd) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n            onEnd && onEnd();\n        },\n        onStop: onEnd,\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.5.4\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { acceleratedValues } from '../../animation/animators/utils/accelerated-values.mjs';\nimport { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction getWillChangeName(name) {\n    if (transformProps.has(name)) {\n        return \"transform\";\n    }\n    else if (acceleratedValues.has(name)) {\n        return camelToDash(name);\n    }\n}\n\nexport { getWillChangeName };\n","import { MotionValue } from '../index.mjs';\nimport { getWillChangeName } from './get-will-change-name.mjs';\nimport { removeItem } from '../../utils/array.mjs';\n\nclass WillChangeMotionValue extends MotionValue {\n    constructor() {\n        super(...arguments);\n        this.output = [];\n        this.counts = new Map();\n    }\n    add(name) {\n        const styleName = getWillChangeName(name);\n        if (!styleName)\n            return;\n        /**\n         * Update counter. Each value has an indepdent counter\n         * as multiple sources could be requesting the same value\n         * gets added to will-change.\n         */\n        const prevCount = this.counts.get(styleName) || 0;\n        this.counts.set(styleName, prevCount + 1);\n        if (prevCount === 0) {\n            this.output.push(styleName);\n            this.update();\n        }\n        /**\n         * Prevents the remove function from being called multiple times.\n         */\n        let hasRemoved = false;\n        return () => {\n            if (hasRemoved)\n                return;\n            hasRemoved = true;\n            const newCount = this.counts.get(styleName) - 1;\n            this.counts.set(styleName, newCount);\n            if (newCount === 0) {\n                removeItem(this.output, styleName);\n                this.update();\n            }\n        };\n    }\n    update() {\n        this.set(this.output.length ? this.output.join(\", \") : \"auto\");\n    }\n}\n\nexport { WillChangeMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { WillChangeMotionValue } from './WillChangeMotionValue.mjs';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    var _a;\n    if (!visualElement.applyWillChange)\n        return;\n    let willChange = visualElement.getValue(\"willChange\");\n    /**\n     * If we haven't created a willChange MotionValue, and the we haven't been\n     * manually provided one, create one.\n     */\n    if (!willChange && !((_a = visualElement.props.style) === null || _a === void 0 ? void 0 : _a.willChange)) {\n        willChange = new WillChangeMotionValue(\"auto\");\n        visualElement.addValue(\"willChange\", willChange);\n    }\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff, addValueToWillChange(visualElement, key)));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n            this.removeWillChange = addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        var _a;\n        (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false, addValueToWillChange(this.visualElement, axis)));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nlet scheduleHandoffComplete = false;\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete &&\n        ((_a = window.MotionHasOptimisedAnimation) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        wantsHandoff.current = false;\n        // This ensures all future calls to animateChanges() will run in useEffect\n        if (!scheduleHandoffComplete) {\n            scheduleHandoffComplete = true;\n            queueMicrotask(completeHandoff);\n        }\n    });\n    return visualElement;\n}\nfunction completeHandoff() {\n    window.MotionHandoffIsComplete = true;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    /**\n     * If the willChange style has been manually set as a string, set\n     * applyWillChange to false to prevent it from automatically being applied.\n     */\n    if (visualElement && style && typeof style.willChange === \"string\") {\n        visualElement.applyWillChange = false;\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { getWillChangeName } from '../../value/use-will-change/get-will-change-name.mjs';\nimport { addUniqueItem } from '../../utils/array.mjs';\n\nfunction makeState({ applyWillChange = false, scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext, isStatic) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, isStatic ? false : applyWillChange, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext, isStatic);\n    return isStatic ? make() : useConstant(make);\n};\nfunction addWillChange(willChange, name) {\n    const memberName = getWillChangeName(name);\n    if (memberName) {\n        addUniqueItem(willChange, memberName);\n    }\n}\nfunction forEachDefinition(props, definition, callback) {\n    const list = Array.isArray(definition) ? definition : [definition];\n    for (let i = 0; i < list.length; i++) {\n        const resolved = resolveVariantFromProps(props, list[i]);\n        if (resolved) {\n            const { transitionEnd, transition, ...target } = resolved;\n            callback(target, transitionEnd);\n        }\n    }\n}\nfunction makeLatestValues(props, context, presenceContext, shouldApplyWillChange, scrapeMotionValues) {\n    var _a;\n    const values = {};\n    const willChange = [];\n    const applyWillChange = shouldApplyWillChange && ((_a = props.style) === null || _a === void 0 ? void 0 : _a.willChange) === undefined;\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        forEachDefinition(props, variantToSet, (target, transitionEnd) => {\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd) {\n                values[key] = transitionEnd[key];\n            }\n        });\n    }\n    // Add animating values to will-change\n    if (applyWillChange) {\n        if (animate && initial !== false && !isAnimationControls(animate)) {\n            forEachDefinition(props, animate, (target) => {\n                for (const key in target) {\n                    addWillChange(willChange, key);\n                }\n            });\n        }\n        if (willChange.length) {\n            values.willChange = willChange.join(\",\");\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        applyWillChange: true,\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * If true, will-change will be applied to the element. Only HTMLVisualElements\n         * currently support this.\n         */\n        this.applyWillChange = false;\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            this.isRenderScheduled = false;\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.isRenderScheduled = false;\n        this.scheduleRender = () => {\n            if (!this.isRenderScheduled) {\n                this.isRenderScheduled = true;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.5.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.5.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.applyWillChange = true;\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const noop = (any) => any;\n\nexport { noop };\n","import { resolveElements } from '../utils/resolve-element.mjs';\n\nconst thresholds = {\n    some: 0,\n    all: 1,\n};\nfunction inView(elementOrSelector, onStart, { root, margin: rootMargin, amount = \"some\" } = {}) {\n    const elements = resolveElements(elementOrSelector);\n    const activeIntersections = new WeakMap();\n    const onIntersectionChange = (entries) => {\n        entries.forEach((entry) => {\n            const onEnd = activeIntersections.get(entry.target);\n            /**\n             * If there's no change to the intersection, we don't need to\n             * do anything here.\n             */\n            if (entry.isIntersecting === Boolean(onEnd))\n                return;\n            if (entry.isIntersecting) {\n                const newOnEnd = onStart(entry);\n                if (typeof newOnEnd === \"function\") {\n                    activeIntersections.set(entry.target, newOnEnd);\n                }\n                else {\n                    observer.unobserve(entry.target);\n                }\n            }\n            else if (onEnd) {\n                onEnd(entry);\n                activeIntersections.delete(entry.target);\n            }\n        });\n    };\n    const observer = new IntersectionObserver(onIntersectionChange, {\n        root,\n        rootMargin,\n        threshold: typeof amount === \"number\" ? amount : thresholds[amount],\n    });\n    elements.forEach((element) => observer.observe(element));\n    return () => observer.disconnect();\n}\n\nexport { inView };\n","import { invariant } from '../../../utils/errors.mjs';\n\nfunction resolveElements(elements, scope, selectorCache) {\n    var _a;\n    if (typeof elements === \"string\") {\n        let root = document;\n        if (scope) {\n            invariant(Boolean(scope.current), \"Scope provided, but no element detected.\");\n            root = scope.current;\n        }\n        if (selectorCache) {\n            (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : (selectorCache[elements] = root.querySelectorAll(elements));\n            elements = selectorCache[elements];\n        }\n        else {\n            elements = root.querySelectorAll(elements);\n        }\n    }\n    else if (elements instanceof Element) {\n        elements = [elements];\n    }\n    /**\n     * Return an empty array\n     */\n    return Array.from(elements || []);\n}\n\nexport { resolveElements };\n","import { useState, useEffect } from 'react';\nimport { inView } from '../render/dom/viewport/index.mjs';\n\nfunction useInView(ref, { root, margin, amount, once = false } = {}) {\n    const [isInView, setInView] = useState(false);\n    useEffect(() => {\n        if (!ref.current || (once && isInView))\n            return;\n        const onEnter = () => {\n            setInView(true);\n            return once ? undefined : () => setInView(false);\n        };\n        const options = {\n            root: (root && root.current) || undefined,\n            margin,\n            amount,\n        };\n        return inView(ref.current, onEnter, options);\n    }, [root, ref, margin, once, amount]);\n    return isInView;\n}\n\nexport { useInView };\n"],"names":["createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","apply","arguments","get","_target","key","has","set","isAnimationControls","v","start","_objectWithoutProperties","source","excluded","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iterableToArray","unsupportedIterableToArray","TypeError","isKeyframesTarget","shallowCompare","next","prev","prevLength","isVariantLabel","getValueState","visualElement","state","values","forEach","value","getVelocity","resolveVariantFromProps","props","definition","custom","_getValueState","_getValueState2","_slicedToArray","current","velocity","undefined","variants","_getValueState3","_getValueState4","resolveVariant","getProps","variantPriorityOrder","variantProps","concat","transformPropOrder","transformProps","Set","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","type","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","_ref","keyframes","startsWith","Math","sqrt","getValueTransition","transition","MotionGlobalConfig","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","_ref$repeatType","repeatType","resolvedKeyframes","filter","index","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","step","schedule","queue","add","cancel","delete","process","frameData","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","max","min","keepAlive","immediate","_createRenderBatcher","requestAnimationFrame","noop","frame","cancelFrame","_get","Reflect","bind","property","receiver","base","object","hasOwnProperty","getPrototypeOf","desc","getOwnPropertyDescriptor","this","isZeroValueString","test","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","splitCSSVariableRegex","getVariableValue","element","depth","invariant","_parseCSSVariable","match","exec","_match","token1","token2","fallback","parseCSSVariable","_parseCSSVariable2","resolved","window","getComputedStyle","getPropertyValue","trimmed","parseFloat","clamp","number","parse","transform","alpha","_objectSpread","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","width","_ref2","_ref3","x","_ref3$paddingLeft","paddingLeft","_ref3$paddingRight","paddingRight","height","_ref4","_ref5","y","_ref5$paddingTop","paddingTop","_ref5$paddingBottom","paddingBottom","top","_ref6","left","_ref7","bottom","_ref8","_ref9","right","_ref10","_ref11","translateX","translateY","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","getValue","push","removeNonTranslationalTransform","measureInitialState","restore","_a","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","name","motionValue","isAsync","_classCallCheck","isComplete","_createClass","currentValue","valueAsRead","readValue","scheduleResolve","isColorString","testProp","Boolean","isNullish","splitColor","aName","bName","cName","_v$match","_v$match2","a","b","c","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","_analyseComplexValue","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","functions","join","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","size","padding","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateZ","z","perspective","transformPerspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","_KeyframeResolver","_inherits","_super","_createSuper","_getPrototypeOf","keyframe","resolveNoneKeyframes","_unresolvedKeyframes","origin","originType","targetType","noneKeyframeIndexes","animatableTemplate","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","e","f","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","memo","result","clearTime","time","newTime","queueMicrotask","isAnimatable","BaseAnimation","_ref$autoplay","autoplay","_ref$delay","delay","_ref$type","_ref$repeat","_ref$repeatDelay","repeatDelay","options","_excluded","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","resolvedAt","_resolved","_this$options","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","warning","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","resolve","reject","currentFinishedPromise","then","_this","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$duration","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","pow","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","some","spring","resolveSpring","restDelta","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","p","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","_definition","combineFunctions","pipe","_len","transformers","_key","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","_ref$ease","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","_BaseAnimation","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","teardown","onStop","KeyframeResolver$1","onKeyframesResolved","keyframes$1","mapPercentToKeyframes","mirroredGenerator","_this$options2","_this$options2$type","_this$options2$repeat","_this$options2$repeat2","_this$options2$veloci","generatorFactory","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","_this$options$autopla","play","pause","sample","_this$options3","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","_this2","resume","_this$options4","_this$options4$driver","onPlay","tick","calcStartTime","stopDriver","acceleratedValues","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","Element","AcceleratedAnimation","_this$options2$durati","owner","requiresPregeneratedKeyframes","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","animation","valueName","keyframeOptions","animate","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","_excluded2","sampleTime","setWithVelocity","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","propName","newValue","cancelAll","attachTimeline","prevProgress","onFrame","observeTimeline","cancelTimeline","getAll","setAll","methodName","controls","animateMotionValue","isHandoff","onEnd","valueTransition","_transition$elapsed","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","supports","isCustomValue","toValue","resolveFinalValueInKeyframes","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","handler","numSubscriptions","collectMotionValues","MotionValue","init","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","notify","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","subscription","on","eventName","unsubscribe","getSize","eventManagers","passiveEffect","stopPassiveEffect","endAnimation","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","setMotionValue","hasValue","addValue","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","getWillChangeName","WillChangeMotionValue","_MotionValue","counts","styleName","prevCount","hasRemoved","newCount","isMotionValue","addValueToWillChange","applyWillChange","willChange","style","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","_ref2$delay","transitionOverride","_targetAndTransition$","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","_ref$transitionEnd","setTarget","animateVariant","variant","presenceContext","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","context","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","_loop","typeState","prop","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","liveStyle","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","initial","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","AnimationFeature","_Feature","unmountControls","subscribe","updateAnimationControlsSubscription","prevProps","id","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","unmount","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addDomEvent","passive","addEventListener","removeEventListener","addPointerEvent","PanSession","handlers","transformPagePoint","contextWindow","_ref$dragSnapToOrigin","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","isRefObject","ref","SCALE_MIN","SCALE_MAX","TRANSLATE_MIN","TRANSLATE_MAX","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","parent","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","pauseAnimation","stopAnimation","_this$getProps2","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","removeWillChange","_this$getProps3","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps8","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps9","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","root","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps10","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","_this5","dragKey","toUpperCase","externalMotionValue","_this6","_projection$layout$la","_this7","_this$getProps11","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","updateScroll","updateLayout","_this7$constraints$ax","_this8","stopPointerListener","_this8$getProps","_this8$getProps$dragL","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","_this$node$getProps","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","PresenceContext","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","MeasureLayoutWithContext","_Component","correctors","_this$props","layoutGroup","switchLayoutGroup","layoutId","defaultScaleCorrectors","assign","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","remove","deregister","Component","MeasureLayout","_usePresence","useContext","useId","useEffect","useCallback","usePresence","_usePresence2","jsx","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","compareByDepth","FlatTree","children","isDirty","resolveMotionValue","unwrappedValue","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","_projectionNode$optio","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","SVGElement","tagName","mount","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetSkewAndRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","hasDistortingTransform","resetValues","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","_this$projectionDelta","transformOrigin","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","userAgentContains","string","navigator","userAgent","includes","roundPoint","maxDistance","DocumentProjectionNode","document","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","addHoverEvent","callbackName","HoverGesture","FocusGesture","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","onTapStart","removePointerListener","removeFocusListener","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","inView","tap","focus","hover","MotionConfigContext","isStatic","reducedMotion","MotionContext","isBrowser","useIsomorphicLayoutEffect","useLayoutEffect","LazyContext","strict","scheduleHandoffComplete","useVisualElement","visualState","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","updateFeatures","completeHandoff","allowProjection","useMotionRef","externalRef","isControllingVariants","isVariantNode","useCreateMotionContext","_getCurrentTreeVarian","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefMotionComponent","forwardRef","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","layoutGroupId","lowercaseSVGElements","isSVGComponent","renderHTML","vars","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","attrs","setAttribute","isForcedMotionValue","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","charAt","makeUseVisualState","make","_ref$applyWillChange","createRenderState","onMount","makeLatestValues","makeState","useConstant","addWillChange","memberName","forEachDefinition","list","shouldApplyWillChange","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","createHtmlRenderState","createSvgRenderState","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","transformName","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","viewBox","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","tag","svgMotionConfig","getBBox","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createElement","createMotionComponentFactory","baseConfig","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","isRenderScheduled","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","_visualElement","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","removeSyncCheck","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","any","thresholds","elementOrSelector","_ref$amount","elements","scope","selectorCache","querySelectorAll","resolveElements","activeIntersections","observer","newOnEnd","disconnect","useInView","_ref$once","_useState","useState","_useState2","setInView"],"sourceRoot":""}